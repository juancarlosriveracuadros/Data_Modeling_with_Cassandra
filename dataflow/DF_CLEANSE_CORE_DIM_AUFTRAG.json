{
	"name": "DF_CLEANSE_CORE_DIM_AUFTRAG",
	"properties": {
		"folder": {
			"name": "CLEANSE_CORE"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SRC_AZRSQL_ALL_LAYER_STRUCTURE",
						"type": "DatasetReference"
					},
					"name": "SourceCleanseAuftrag"
				},
				{
					"dataset": {
						"referenceName": "SRC_AZRSQL_ALL_LAYER_STRUCTURE",
						"type": "DatasetReference"
					},
					"name": "SourceCoreAuftrag"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TRG_AZRSQL_CORE_DIM_AUFTRAG",
						"type": "DatasetReference"
					},
					"name": "targetUpdateCoreDimSAuftrag"
				},
				{
					"dataset": {
						"referenceName": "TRG_AZRSQL_CORE_DIM_AUFTRAG",
						"type": "DatasetReference"
					},
					"name": "targetInsertCoreDimAuftrag"
				}
			],
			"transformations": [
				{
					"name": "CoreDimAuftragMaxSk"
				},
				{
					"name": "Lookup"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "derivedColForUpdatedRow"
				},
				{
					"name": "alterRowforUpdate"
				},
				{
					"name": "createSk"
				},
				{
					"name": "JoinMax"
				},
				{
					"name": "derivedColForNewRows"
				},
				{
					"name": "alterRowforInsert"
				},
				{
					"name": "filterActiceRows"
				}
			],
			"script": "source(output(\n\t\tMANDT as integer,\n\t\tAUFNR as string,\n\t\tKOKRS as string,\n\t\tBUKRS as string,\n\t\tDATBI as string,\n\t\tKOSTV as string,\n\t\tKOSTL as string,\n\t\tKTEXT as string,\n\t\tVERAK as string,\n\t\tBUTXT as string,\n\t\tORT01 as string,\n\t\tHASHKEY_BK as string,\n\t\tHASHKEY_DATA as string,\n\t\tCREATED_ON as timestamp,\n\t\tSOURCE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * FROM CLEANSE.AUFTRAG',\n\tformat: 'query') ~> SourceCleanseAuftrag\nsource(output(\n\t\tCAUFT_DIM_AUFTRAG_SK as string,\n\t\tCAUFT_MANDT as string,\n\t\tCAUFT_AUFNR as string,\n\t\tCAUFT_KOKRS as string,\n\t\tCAUFT_BUKRS as string,\n\t\tCAUFT_DATBI as string,\n\t\tCAUFT_KOSTV as string,\n\t\tCAUFT_KOSTL as string,\n\t\tCAUFT_KTEXT as string,\n\t\tCAUFT_VERAK as string,\n\t\tCAUFT_BUTXT as string,\n\t\tCAUFT_ORT01 as string,\n\t\tCAUFT_HASHKEY_BK as string,\n\t\tCAUFT_HASHKEY_DATA as string,\n\t\tCAUFT_CREATED_ON as string,\n\t\tCAUFT_SOURCE as string,\n\t\tCAUFT_VALID_FROM as string,\n\t\tCAUFT_VALID_TO as string,\n\t\tCAUFT_CURRENT_FLAG as string,\n\t\tCAUFT_DML_STRAT as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * FROM CORE.DIM_AUFTRAG',\n\tformat: 'query') ~> SourceCoreAuftrag\nfilterActiceRows aggregate(MAXSK = max(toInteger(CAUFT_DIM_AUFTRAG_SK))) ~> CoreDimAuftragMaxSk\nSourceCleanseAuftrag, filterActiceRows lookup(MANDT == toInteger(CAUFT_MANDT)\n\t&& AUFNR == CAUFT_AUFNR,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup\nLookup split(!isNull(CAUFT_HASHKEY_BK) && notEquals(CAUFT_HASHKEY_DATA, HASHKEY_DATA),\n\tisNull(CAUFT_HASHKEY_BK),\n\tdisjoint: false) ~> ConditionalSplit1@(updateRows, newRows, doNothing)\nConditionalSplit1@updateRows derive(CURRENT_FLAG = 'N',\n\t\tVALID_TO = currentTimestamp(),\n\t\tDML_STRAT = 'HIST_UPD') ~> derivedColForUpdatedRow\nderivedColForUpdatedRow alterRow(updateIf(true())) ~> alterRowforUpdate\nConditionalSplit1@newRows keyGenerate(output(SK as long),\n\tstartAt: 1L) ~> createSk\ncreateSk, CoreDimAuftragMaxSk join(SK == MAXSK || true(),\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> JoinMax\nJoinMax derive(NEWSK = SK + MAXSK,\n\t\tVALID_FROM = currentTimestamp(),\n\t\tVALID_TO = toTimestamp('2999-12-31 00:00:00'),\n\t\tDML_STRAT = iif(notEquals(CAUFT_HASHKEY_DATA, HASHKEY_DATA), 'HIST_INS', 'INS'),\n\t\tSOURCE = 'CLEANSE.AUFTRAG',\n\t\tCREATED_ON = currentTimestamp(),\n\t\tCURRENT_FLAG = 'Y') ~> derivedColForNewRows\nderivedColForNewRows alterRow(insertIf(true())) ~> alterRowforInsert\nSourceCoreAuftrag filter(CAUFT_CURRENT_FLAG == 'Y') ~> filterActiceRows\nalterRowforUpdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['CAUFT_DIM_AUFTRAG_SK'],\n\tformat: 'table',\n\tmapColumn(\n\t\tCAUFT_DIM_AUFTRAG_SK,\n\t\tCAUFT_VALID_TO = VALID_TO,\n\t\tCAUFT_CURRENT_FLAG = CURRENT_FLAG,\n\t\tCAUFT_DML_STRAT = DML_STRAT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> targetUpdateCoreDimSAuftrag\nalterRowforInsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tCAUFT_DIM_AUFTRAG_SK = NEWSK,\n\t\tCAUFT_MANDT = MANDT,\n\t\tCAUFT_AUFNR,\n\t\tCAUFT_KOKRS = AUFNR,\n\t\tCAUFT_BUKRS = BUKRS,\n\t\tCAUFT_DATBI = DATBI,\n\t\tCAUFT_KOSTV = KOSTV,\n\t\tCAUFT_KOSTL = KOSTL,\n\t\tCAUFT_KTEXT = KTEXT,\n\t\tCAUFT_VERAK = VERAK,\n\t\tCAUFT_BUTXT = BUTXT,\n\t\tCAUFT_ORT01 = ORT01,\n\t\tCAUFT_HASHKEY_BK = HASHKEY_BK,\n\t\tCAUFT_HASHKEY_DATA = HASHKEY_DATA,\n\t\tCAUFT_CREATED_ON = CREATED_ON,\n\t\tCAUFT_SOURCE = SOURCE,\n\t\tCAUFT_VALID_FROM = VALID_FROM,\n\t\tCAUFT_VALID_TO = VALID_TO,\n\t\tCAUFT_CURRENT_FLAG = CURRENT_FLAG,\n\t\tCAUFT_DML_STRAT = DML_STRAT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> targetInsertCoreDimAuftrag"
		}
	}
}